from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.utils.exceptions import Throttled
from aiogram.dispatcher import FSMContext
import requests
import base64 
import json
import os

bot = Bot(token="") #–¢—É—Ç —Ç–æ–∫–µ–Ω
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)
async def anti_flood(*args, **kwargs):
    message = args[0]
    await message.answer("–ù–µ —Ñ–ª—É–¥–∏, —è —Ç–µ–±—è —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞ –ø–æ–Ω—è–ª!")
    
@dp.message_handler(commands="start")
@dp.throttled(anti_flood,rate=1)
async def start(message: types.Message):
    await bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ T.I.A.T\n–†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ–º—Å—è –º—ã –∫–∞–∫: turning into a tian\n–Ø –æ–±—Ä–∞–±–æ—Ç–∞—é –≤–∞—à–µ —Ñ–æ—Ç–æ –≤ –∞–Ω–∏–º–µ —Å –ø–æ–º–æ—â—å—é –∫–∏—Ç–∞–π—Å–∫–æ–π –Ω–µ–π—Ä–æ–Ω–∫–∏\n\n–ú–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ, –∏ —è –Ω–∞—á–Ω—É –æ–±—Ä–∞–±–æ—Ç–∫—É")
    pass
    
@dp.message_handler(content_types=["photo"])
@dp.throttled(anti_flood,rate=0.5)
async def get_photo(message):
    chat_id = message.chat.id
    msg = await bot.send_message(chat_id, "–ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É...")
    try:
        await message.photo[-1].download(f'photo/{chat_id}.png')
        image = open(f'photo/{chat_id}.png', 'rb')
        image_read = image.read()
        encoded_string = base64.b64encode(image_read)
    
        data = {
        "busiId": "ai_painting_anime_img_entry",
        "images": [f"{encoded_string.decode('utf-8')}"],
        "extra": "{\"face_rects\":[],\"version\":2,\"platform\":\"web\",\"data_report\":{\"parent_trace_id\":\"bfd12fae-1c76-0c8c-b60f-6ca82cb842e7\",\"root_channel\":\"qq_sousuo\",\"level\":11}}"}
    
        await msg.edit_text("–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å —Å–µ—Ä–≤–∏—Å—É –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É...")
    
        result = requests.post('https://ai.tu.qq.com/trpc.shadow_cv.ai_processor_cgi.AIProcessorCgi/Process', json=data)
        await msg.edit_text("–†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç...")
        respons = json.loads(result.text)
        search = json.loads(respons['extra'])
        site = search["img_urls"][0]
        await msg.delete()
        await bot.send_photo(chat_id, photo=f'{site}', caption=f'üíé–õ—è –∫–∞–∫ –∫—Ä–∞—Å–∏–≤–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å!\n–ü–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–π –º–æ–π —Å–µ—Ä–≤–∏—Å –¥—Ä—É–∑—å—è–º, —Ç–µ–±–µ –Ω–µ —Å–ª–æ–∂–Ω–æ –∞ –º–Ω–µ –ø—Ä–∏—è—Ç–Ω–æ\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @CTOHKC', parse_mode='html')
    except:
        await msg.edit_text("–°–µ—Ä–≤–µ—Ä –ø—Ä–∏—Å–ª–∞–ª –æ—à–∏–±–∫—É.\n–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Å–µ—Ç—å –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–∞\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 2-3 –º–∏–Ω—É—Ç–∫–∏ —Å–Ω–æ–≤–∞\n–£ –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è, —è –æ–±–µ—â–∞—é)")
    os.remove(f'photo/{chat_id}.png')
    pass
    
while True:
    try:
        if __name__ == "__main__":
            executor.start_polling(dp, skip_updates=True)
        break
    except:
        print("–û—à–∏–∫–∞.\n–û–∂–∏–¥–∞–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ 20 —Å–µ–∫...")
        time.sleep(20)